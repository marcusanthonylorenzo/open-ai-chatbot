!function(c){var n={};function t(l){if(n[l])return n[l].exports;var e=n[l]={i:l,l:!1,exports:{}};return c[l].call(e.exports,e,e.exports,t),e.l=!0,e.exports}t.m=c,t.c=n,t.d=function(c,n,l){t.o(c,n)||Object.defineProperty(c,n,{enumerable:!0,get:l})},t.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},t.t=function(c,n){if(1&n&&(c=t(c)),8&n)return c;if(4&n&&"object"==typeof c&&c&&c.__esModule)return c;var l=Object.create(null);if(t.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:c}),2&n&&"string"!=typeof c)for(var e in c)t.d(l,e,function(n){return c[n]}.bind(null,e));return l},t.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return t.d(n,"a",n),n},t.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)},t.p="",t(t.s=4)}([function(module,exports,__webpack_require__){eval("var api = __webpack_require__(1);\n            var content = __webpack_require__(2);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3N0eWxlcy5jc3M/OTlhMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsQ0FBMkU7QUFDN0YsMEJBQTBCLG1CQUFPLENBQUMsQ0FBMEQ7O0FBRTVGOztBQUVBO0FBQ0EsMEJBQTBCLFFBQVM7QUFDbkM7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7OztBQUlBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(3);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap);"]);\n// Module\nexports.push([module.i, ":root {\\r\\n  --offline-color: rgb(174, 174, 174);\\r\\n  --border-color: rgba(65, 65, 65, 0.8);\\r\\n  --bg-color: rgba(234, 231, 231, 0.5);\\r\\n}\\r\\n\\r\\nbody {\\r\\n  /* if image fails default to color: */\\r\\n  background-color: rgba(235, 192, 192, 0.5);\\r\\n  background-image: url(\\"https://wallpapercave.com/wp/wp2754864.jpg\\");\\r\\n}\\r\\n\\r\\nh5, h4 {\\r\\n  margin: 3%;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\nli {\\r\\n  list-style: none;\\r\\n}\\r\\n\\r\\n.offline {\\r\\n  font-size: 1em;\\r\\n  text-align: left;\\r\\n  color: var(--offline-color);\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n.instructions {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  background-color: rgba(234, 231, 231, 0.968);\\r\\n  width: 36vw;\\r\\n  position: relative;\\r\\n  left: 30%;\\r\\n  bottom: 20%;\\r\\n  padding: 1rem;\\r\\n  margin-top: 2rem;\\r\\n  border: 1px solid var(--border-color);\\r\\n  font-family: \\"IBM Plex Mono\\";\\r\\n}\\r\\n\\r\\n#dev {\\r\\n  margin-top: 1%;\\r\\n  margin-left: 5%;\\r\\n}\\r\\n\\r\\n#dev li{\\r\\n  font-size: .8rem;\\r\\n  color: rgba(11, 150, 1, 0.907);\\r\\n}\\r\\n\\r\\n.container {\\r\\n  display: flex;\\r\\n  position: static;\\r\\n  flex-direction: row;\\r\\n  width: 52vw;\\r\\n  height: 50vh;\\r\\n  margin: auto;\\r\\n  margin-top: 5%;\\r\\n  padding: 2rem;\\r\\n  align-items: right;\\r\\n  justify-content: flex-end;\\r\\n  background-color: var(--bg-color);\\r\\n  gap: 0.5rem;\\r\\n  border: 1px solid rgba(65, 65, 65, 0.8);\\r\\n  border-top-style: none;\\r\\n  box-shadow: 3px 6px 1px 3px rgba(33, 33, 33, 0.7);\\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n  background-color: rgb(170, 167, 167);\\r\\n  width: 30%;\\r\\n  height: 100%;\\r\\n  margin-left: 5%;\\r\\n  font-family: Tahoma, sans-serif;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.side-display {\\r\\n  background-color: rgba(255, 255, 255, 1);\\r\\n  height: 99%;\\r\\n  width: 98%;\\r\\n  margin: auto;\\r\\n  margin-top: 1%;\\r\\n  overflow: auto;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.chatlogItems {\\r\\n  list-style-type: none;\\r\\n  justify-content: center;\\r\\n  width: 95%;\\r\\n  margin: auto;\\r\\n  padding-left: 10%;\\r\\n  text-align: left;\\r\\n  font-size: 14px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.side-output li:hover {\\r\\n  background-color: rgba(255, 237, 73, 0.8);\\r\\n  list-style-type: none;\\r\\n  justify-content: center;\\r\\n  width: 90%;\\r\\n  margin: auto;\\r\\n  padding-left: 10%;\\r\\n  text-align: left;\\r\\n  font-size: 14px;\\r\\n  border-style: dotted;\\r\\n}\\r\\n\\r\\n.inner-wrap {\\r\\n  margin: auto;\\r\\n  background-color: rgb(231, 231, 231);\\r\\n  width: 90%;\\r\\n  height: 100%;\\r\\n  box-shadow: 3px 6px 1px 3px rgba(43, 42, 42, 0.7);\\r\\n  border: 2px solid;\\r\\n  padding-top: 1%;\\r\\n}\\r\\n\\r\\n.top-bar {\\r\\n  display: flex;\\r\\n  margin: auto;\\r\\n  background: rgb(2,0,36);\\r\\n  background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(39,74,162,1) 35%, rgb(234, 232, 232) 100%);\\r\\n  height: 6%;\\r\\n  width: 96.5%;\\r\\n  font-family: \\"IBM Plex Mono\\";\\r\\n  color: rgb(231, 231, 231);\\r\\n  box-shadow: 1px 1px 1px 0px rgba(127, 125, 125, 0.4);\\r\\n}\\r\\n\\r\\n.top-bar h5 {\\r\\n  margin: 1%;\\r\\n  font-weight: 600;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.chatbox {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  width: 98%;\\r\\n  height: 92%;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.display {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: flex-end;\\r\\n  background-color: rgba(255, 255, 255, 0.7);\\r\\n  width: 98%;\\r\\n  height: 99%;\\r\\n  border: 1px solid rgba(54, 54, 54, .7);\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.output {\\r\\n  padding: 2%;\\r\\n}\\r\\n\\r\\n.chatBubble {\\r\\n  display: inline-flex;\\r\\n  justify-content: right;\\r\\n  width: 100%;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.info {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  align-items: left;\\r\\n  margin: auto;\\r\\n  margin-bottom: 1%;\\r\\n  width: 98%\\r\\n}\\r\\n\\r\\n#screenName {\\r\\n  height: 36%;\\r\\n  width: 40%;\\r\\n  margin-top: 2%;\\r\\n  border-style: 1px solid rgba(255, 255, 255, 0.7);\\r\\n}\\r\\n\\r\\n#year {\\r\\n  height: 36%;\\r\\n  width: 28%;\\r\\n  margin-top: 2%;\\r\\n  margin-left: 2%;\\r\\n  border-style: 1px solid rgba(255, 255, 255, 0.7);\\r\\n}\\r\\n\\r\\n#cool {\\r\\n  font-size: 10px;\\r\\n  width: 40%;\\r\\n  margin: 1%;\\r\\n  margin-top: 2%;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\n#checkyboi {\\r\\n  margin: auto;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.form-wrapper {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#formInput {\\r\\n  height: 110%;\\r\\n  width: 97%;\\r\\n  margin-top: 1%;\\r\\n  margin-bottom: 1%;\\r\\n}\\r\\n\\r\\n#isTypingArea {\\r\\n  display: flex;\\r\\n  position: relative;\\r\\n  left: -8%;\\r\\n  width: 80%;\\r\\n  height: 20%;\\r\\n  font-size: 12px;\\r\\n  font-family: Tahoma;\\r\\n}\\r\\n\\r\\n#isTypingStatus {\\r\\n  display: flex;\\r\\n  justify-content: left;\\r\\n}\\r\\n\\r\\n.bottom-bar {\\r\\n  display: flex;\\r\\n  height: 60%;\\r\\n  width: 97%;\\r\\n  margin: 2%;\\r\\n  border: 2.5px solid rgba(127, 125, 125, 0.4);\\r\\n}\\r\\n\\r\\n.bottom-buttons-section {\\r\\n  display: flex;\\r\\n  gap: 1%;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.bottom-buttons-clickspace {\\r\\n  height: 100%;\\r\\n  width: 25%;\\r\\n  padding: 1%;\\r\\n  border: 1px solid rgba(104, 104, 104, 0.2);\\r\\n  box-shadow: 1px 1px 1px 1px rgba(127, 125, 125, 0.4);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.bottom-buttons-clickspace:active {\\r\\n  height: 99%;\\r\\n  background-color: var(--offline-color);\\r\\n}\\r\\n\\r\\n.appNotes {\\r\\n  font-size: 16px;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.thankYou {\\r\\n  display: grid;\\r\\n  height: 20%;\\r\\n  width: 98%;\\r\\n  padding: 1%;\\r\\n  font-size: 12px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.me p {\\r\\n  height: 100%;\\r\\n  font-weight: 600;\\r\\n  margin: 1%;\\r\\n  font-family: \\"IBM Plex Mono\\";\\r\\n}\\r\\n\\r\\n.icons {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  gap: 4%;\\r\\n}\\r\\n\\r\\n.icons img {\\r\\n  border-radius: 7px 7px;\\r\\n}\\r\\n\\r\\n.icon-sizer {\\r\\n  height: 18px;\\r\\n  width: 20px;\\r\\n}\\r\\n\\r\\n.bottom-submit {\\r\\n  display: flex;\\r\\n  width: 40%;\\r\\n  justify-content: right;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n#submitBtn {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#red, .red {\\r\\n  font-weight: 700;\\r\\n  color: rgb(197, 33, 33);\\r\\n}\\r\\n\\r\\n#blue, .blue {\\r\\n  font-weight: 700;\\r\\n  color: rgb(33, 62, 194);\\r\\n}\\r\\n\\r\\n.popup {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  position: absolute;\\r\\n  background-color: rgba(226, 226, 226, 0.98);\\r\\n  padding: auto;\\r\\n  left: 25%;\\r\\n  height: 40vh;\\r\\n  width: 50vw;\\r\\n  border: 1px solid rgba(65, 65, 65, 0.5);\\r\\n  box-shadow: 3px 6px 1px 3px rgba(127, 125, 125, 0.4);\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\n.popup li {\\r\\n  width: 50%;\\r\\n}\\r\\n\\r\\n#doneBtn {\\r\\n  margin-top: 2%;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 1000px) {\\r\\n  .container {\\r\\n    display: flex;\\r\\n    position: static;\\r\\n    flex-direction: row;\\r\\n    width: 80vw;\\r\\n    height: 37vh;\\r\\n    margin: auto;\\r\\n    margin-top: 5%;\\r\\n    padding: 2rem;\\r\\n    align-items: right;\\r\\n    justify-content: flex-end;\\r\\n    background-color: rgba(234, 231, 231, 0.931);\\r\\n    gap: 0.5rem;\\r\\n    border: 1px solid rgba(65, 65, 65, 0.8);\\r\\n    border-top-style: none;\\r\\n    box-shadow: 3px 6px 1px 3px rgba(33, 33, 33, 0.7);\\r\\n  }\\r\\n\\r\\n  .top-bar {\\r\\n    display: flex;\\r\\n    margin: auto;\\r\\n    background: rgb(2,0,36);\\r\\n    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(39,74,162,1) 35%, rgb(234, 232, 232) 100%);\\r\\n    height: 10%;\\r\\n    width: 96.5%;\\r\\n    font-family: \\"IBM Plex Mono\\";\\r\\n    color: rgb(231, 231, 231);\\r\\n    box-shadow: 1px 1px 1px 0px rgba(127, 125, 125, 0.4);\\r\\n  }\\r\\n\\r\\n  .instructions {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    background-color: rgba(234, 231, 231, 0.968);\\r\\n    width: 60vw;\\r\\n    position: relative;\\r\\n    left: 15%;\\r\\n    bottom: 20%;\\r\\n    padding: 1rem;\\r\\n    margin-top: 2rem;\\r\\n    border: 1px solid rgba(65, 65, 65, 0.8);\\r\\n    font-family: \\"IBM Plex Mono\\";\\r\\n  }\\r\\n}", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QyxxQkFBcUI7QUFDakU7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EscUJBQXFCLGlCQUFpQjtBQUN0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLHFCQUFxQjtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsOEJBQThCOztBQUU5Qjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLENBQUM7OztBQUdEO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxjQUFjO0FBQ25FO0FBQ0EiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/css/styles.css\nvar styles = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/js/ApiData.js\n/***\r\n * For the sake of testing this program on GitHub Pages, I\'ve hardcoded the API key below to bypass the security measures.\r\n * In every other case, I would store this as an env locally, with a keyword. Thanks!\r\n***/\r\nconst startOf = `sk-O`;\r\nconst importantInfo = `brKxQI4DRqH4dVumFzqT3BlbkFJJkpe4x3nMt0pU9MSvcl9`;\r\n\r\nconst postInputToOpenAI = async (userInput) => {\r\n  const response = await fetch("https://api.openai.com/v1/engines/text-curie-001/completions", {\r\n    method: "POST",\r\n    headers: {\r\n      "Content-Type": "application/json",\r\n      Authorization: `Bearer ${startOf}${importantInfo}`,\r\n    },\r\n    body: JSON.stringify(userInput),\r\n  });\r\n  const jsonResponse = await response.json();\r\n  return jsonResponse;\r\n};\r\n\n// CONCATENATED MODULE: ./src/js/ChatlogItem.js\nclass ChatlogItem {\r\n  constructor(id, prompt, response, user){\r\n    this.id = id;\r\n    this.prompt = prompt;\r\n    this.response = response;\r\n    this.user = user;\r\n  }\r\n}\r\n\r\n/* harmony default export */ var js_ChatlogItem = (ChatlogItem);\n// CONCATENATED MODULE: ./src/js/SidebarComponent.js\nconst sidebarFill = (newPrompt, chatlogHistory, timestamp) => {\r\n  if (newPrompt.length <= 0) {\r\n    newPrompt = "(Empty prompt)";\r\n  }\r\n  const sideOutput = document.querySelector(".side-output");\r\n  const chatlogUl = document.createElement("li");\r\n  chatlogUl.classList.add("chatlogItems");\r\n  sideOutput.prepend(chatlogUl);\r\n  chatlogUl.setAttribute(`id`, `${chatlogHistory.length}`);\r\n  chatlogUl.textContent = newPrompt + ` ` + timestamp;\r\n};\r\n\r\n//Prompt History click handler\r\nconst showHistory = (event, responses, username) => {\r\n  removePopup();\r\n  const getView = document.querySelector(".container");\r\n  let modal = document.createElement("div");\r\n  modal.classList.add("popup");\r\n  const listUser = document.createElement("li");\r\n  const listPrompt = document.createElement("li");\r\n  const listReply = document.createElement("li");\r\n  if (username.length < 1) {\r\n    username = "(No username provided.)";\r\n  }\r\n  listUser.innerHTML = `<h4>User: ${username}</h4>`;\r\n  listPrompt.innerHTML = `<h4>Prompt: ${event.currentTarget.innerHTML}</h4>`;\r\n  listReply.innerHTML = `<h4>Response: ${responses}</h4>`;\r\n  getView.appendChild(modal);\r\n  modal.appendChild(listUser);\r\n  modal.appendChild(listPrompt);\r\n  modal.appendChild(listReply);\r\n};\r\n\r\nconst buddyCountUpdater = (chatlogHistory) => {\r\n  const sideDisplay = document.getElementById(\'buddies\');\r\n  let buddyCount = chatlogHistory.length;\r\n  if (buddyCount === 0) {\r\n    sideDisplay.setAttribute(`class`, `offline`);\r\n    sideDisplay.innerHTML = `🞃 Buddies (${buddyCount}/${buddyCount})`;\r\n  } else {\r\n    sideDisplay.setAttribute(`class`, `onlineNum`);\r\n    sideDisplay.innerHTML = ` ▸ Buddies (${buddyCount}/${buddyCount})`;\r\n  }\r\n};\r\n\r\n//Remove popup\r\nconst removePopup = () => {\r\n  const getPopups = document.querySelectorAll(\'.popup\');\r\n  if (getPopups.length > 0){\r\n    getPopups.forEach((popup) => {\r\n      popup.remove();\r\n    });\r\n  }\r\n};\r\n\r\n//Exit popup\r\nconst addPopupDoneBtn = (getModalList) => {\r\n  getModalList.forEach((item) => {\r\n    const doneBtn = document.createElement("button");\r\n    doneBtn.setAttribute(`id`, `doneBtn`);\r\n    item.append(doneBtn);\r\n    doneBtn.innerText = `Close`;\r\n    doneBtn.addEventListener(`click`, ()=> {\r\n      removePopup();\r\n    });\r\n  });\r\n};\r\n\r\n\n// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\nfunction scopingFunc() {\r\n  //user input storage for POST requests.\r\n  let userInput = {\r\n    prompt: "",\r\n    temperature: 0.5,\r\n    max_tokens: 32,\r\n    top_p: 0.3,\r\n    frequency_penalty: 0.0,\r\n    presence_penalty: 0.0,\r\n  };\r\n  let chatlogHistory = [];\r\n  let promptID = 0;\r\n\r\n  //get screenname values\r\n  function getScreenName() {\r\n    let sn = document.getElementById("screenName").value;\r\n    let year = document.getElementById("year").value;\r\n    let screenNameCombo = sn + year;\r\n    return screenNameCombo;\r\n  }\r\n\r\n  //Form submit on click, POST and response.\r\n  const submitEvent = async (userInput) => {\r\n    await postInputToOpenAI(userInput)\r\n      .then(returnedData => {\r\n        sessionStorage.setItem("officialResponse", returnedData.choices[0].text);\r\n        return returnedData;\r\n      })\r\n      .catch((error) => {\r\n        const getView = document.querySelector(".container");\r\n        let modal = document.createElement("div");\r\n        modal.classList.add("popup");\r\n        const listError = document.createElement("li");\r\n        listError.innerHTML = `\r\n          <h4>Sorry, you\'ve encountered an error!</h4>\r\n          <h4>${error.message}</h4>\r\n          <h4>Please check that your internet connection is strong, or that your key is correct.</h4>\r\n        `;\r\n        getView.appendChild(modal);\r\n        modal.appendChild(listError);\r\n      })\r\n      .finally(() =>  openAiResponseWorkflow());\r\n  };\r\n\r\n  const openAiResponseWorkflow = () => {\r\n    const getResponseFromSessionStorage = sessionStorage.getItem("officialResponse");\r\n    const coolStuffNewTextConversion = coolStuffCheckboxHandler(getResponseFromSessionStorage);\r\n\r\n    //instaniate form in new object, update display\r\n    let chatlogObj = new js_ChatlogItem(promptID, userInput.prompt, coolStuffNewTextConversion);\r\n    chatlogHistory.push(chatlogObj);\r\n    buddyCountUpdater(chatlogHistory);\r\n    chatlogObj.user = getScreenName();\r\n    \r\n    document.getElementById("isTypingStatus").style.display = "none";\r\n    prependChatTextToPage(chatlogObj.response, "blue");\r\n    sendDisable(false);\r\n\r\n    // Select node list of sidebar elements, for each item add modal functionality on click. \r\n    let listItems = document.querySelectorAll(\'.chatlogItems\');\r\n    listItems.forEach((item) => {\r\n      item.addEventListener(\'click\', (event) => {\r\n        let targetResponse = chatlogHistory[event.currentTarget.id].response;\r\n        let targetUsername = chatlogHistory[event.currentTarget.id].user;\r\n        showHistory(event, targetResponse, targetUsername);\r\n        const getModal = document.querySelectorAll(".popup");\r\n        addPopupDoneBtn(getModal, chatlogHistory);\r\n      });\r\n    });\r\n  };\r\n\r\n  //Form submit event workflow.\r\n  const submitButton = document.getElementById("submitBtn");\r\n  submitButton.addEventListener("click", (event) =>{\r\n\r\n    let timestamp = new Date().toLocaleTimeString();\r\n    event.preventDefault();\r\n    sendDisable(true);\r\n    removePopup();\r\n\r\n    userInput.prompt = document.getElementById("formInput").value;\r\n    prependChatTextToPage(userInput.prompt, "red");\r\n    buddyCountUpdater(chatlogHistory);\r\n    showCpuIsTypingStatus();\r\n    submitEvent(userInput);\r\n    sidebarFill(userInput.prompt, chatlogHistory, timestamp); \r\n    document.getElementById("formInput").value = ``;\r\n  });\r\n\r\n  const showCpuIsTypingStatus = () => {\r\n    const isTypingStatusDiv = document.getElementById("isTypingStatus");\r\n    isTypingStatusDiv.style.display = "flex";\r\n    isTypingStatusDiv.textContent = "Open AI is typing...";\r\n  };\r\n\r\n  const sendDisable = (toggle) => {\r\n    const getSendBtn = document.getElementById("submitBtn");\r\n    if (toggle === true){\r\n      getSendBtn.setAttribute("disabled", "");\r\n    } else {\r\n      getSendBtn.removeAttribute("disabled");\r\n    }\r\n  };\r\n\r\n  //Main chat display\r\n  const prependChatTextToPage = (textToPrepend, side) => {\r\n\r\n    //Create new div for each new post, attach ID.\r\n    const output = document.querySelector(".output");\r\n    const chatBubbleDiv = document.createElement("div");\r\n    chatBubbleDiv.setAttribute(`id`, `post${promptID}`);\r\n    chatBubbleDiv.classList.add(`chatBubble`);\r\n    chatBubbleDiv.style.justifyContent = "left";\r\n    output.appendChild(chatBubbleDiv);\r\n\r\n    //chat content\r\n    let chatline = document.createElement("p");  \r\n    const chatBuilder = (name) => {\r\n      if (name.length <= 0) {\r\n        name = "Xx_YourPrompt_xX";\r\n      } \r\n      chatBubbleDiv.prepend(chatline);\r\n      chatline.innerHTML = `\r\n        <span id="${side}"><strong>${name}</strong>:</span> ${textToPrepend}\r\n      `;\r\n    };\r\n    \r\n    //control flow for user vs ai\r\n    let smarterChild = "Not-So-SmarterChild";\r\n    let targetResponse = getScreenName();\r\n    let screenNameCombo;\r\n    const coolStuff = document.getElementById("checkyboi");\r\n    if (coolStuff.checked === true){\r\n      screenNameCombo = sillySpelling(targetResponse);\r\n    } else {\r\n      screenNameCombo = targetResponse;\r\n    } \r\n    if (side === "blue") {\r\n      chatBuilder(smarterChild);\r\n    } else if (side === "red") {\r\n      chatBuilder(screenNameCombo);\r\n    }\r\n  };\r\n\r\n  const sillySpelling = (string) => {\r\n    return string.split(\'\').map((a,i) => i % 2 ? a.toLowerCase(): a.toUpperCase()).join(\'\');\r\n  };\r\n\r\n  //Clear Display\r\n  const clearDisplayBtn = document.getElementById("clearDisplay");\r\n  const displaySelect = document.querySelector(".output");\r\n  clearDisplayBtn.addEventListener("click", () =>{\r\n    clearArea(displaySelect);\r\n  });\r\n\r\n  //Clear All\r\n  const clearAllBtn = document.getElementById("clearAll");\r\n  const sideoutputSelect = document.querySelector(".side-output");\r\n  clearAllBtn.addEventListener("click", () =>{\r\n    clearArea(displaySelect);\r\n    clearArea(sideoutputSelect);\r\n    chatlogHistory.splice(0);\r\n    buddyCountUpdater(chatlogHistory);\r\n  });\r\n\r\n  const clearArea = (element) => {\r\n    removePopup();\r\n    while (element.hasChildNodes()){\r\n      element.removeChild(element.firstChild);\r\n    }\r\n  };\r\n\r\n  const coolStuffCheckboxHandler = (textToMakeCool) => {\r\n    const coolBoi = document.getElementById("checkyboi");\r\n    let textToMakeCoolConversion;\r\n    if (coolBoi.checked === true){\r\n      textToMakeCoolConversion = sillySpelling(textToMakeCool);\r\n    } else {\r\n      textToMakeCoolConversion = textToMakeCool;\r\n    }\r\n    return textToMakeCoolConversion;\r\n  };\r\n}\r\nscopingFunc();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n')}]);